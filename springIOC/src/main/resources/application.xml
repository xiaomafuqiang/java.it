<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- net.htmlonline.components tests -->
    <!--context:component-scan 类级别注解 -->
    <context:component-scan base-package="net.htmlonline.components" />

    <!-- net.htmlonline.xml.config.Company tests -->
    <!-- annotation config 开启属性注入注解, 苟泽可能不生效 -->
    <context:annotation-config />
    <bean id="company" class="net.htmlonline.xml.config.Company"/>

    <!-- aop -->
    <bean id="productDaoImpl" class="net.htmlonline.aop.ProductDaoImpl"/>
    <bean id="myAspect" class="net.htmlonline.aop.MyAspectXml"/>
    <!-- 默认jdk 方式代理 -->
    <!-- 开启cglib -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <aop:config>
        <!-- 定义一系列要拦截切点 在aspect使用 -->
        <aop:pointcut id="pointCut1" expression="execution(* net.htmlonline.aop.ProductDao.save(..))" />
        <aop:pointcut id="pointCut2" expression="execution(* net.htmlonline.aop.ProductDao.delete(..))" />
        <aop:pointcut id="pointCut3" expression="execution(* net.htmlonline.aop.ProductDao.update(..))" />
        <aop:pointcut id="pointCut4" expression="execution(* net.htmlonline.aop.ProductDao.find(..))" />

        <aop:aspect ref="myAspect">
            <!-- 前置通知 -->
            <aop:before method="before" pointcut-ref="pointCut1"/>
            <!-- 后置通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointCut2" returning="result"/>
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="pointCut3"/>
            <!-- 异常抛出通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointCut4" throwing="throwable"/>
            <!-- 最终通知, 无论有无异常出现 -->
            <aop:after method="after" pointcut-ref="pointCut4"/>
        </aop:aspect>
    </aop:config>


</beans>